# DataSource Configuration
# Defines the URL for the in-memory H2 database. "testdb" is the database name.
# DB_CLOSE_DELAY=-1 keeps the content of the in-memory database as long as the VM is alive.
# DB_CLOSE_ON_EXIT=FALSE prevents the database from being closed when the last connection is closed.
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# Specifies the class name of the H2 database driver.
spring.datasource.driverClassName=org.h2.Driver

# Defines the username and password for the database connection. Default username is 'sa' with no password for H2.
spring.datasource.username=admin
spring.datasource.password=admin

# JPA (Java Persistence API) Configuration
# Specifies the database platform to use. In this case, it's set to use H2's dialect, allowing Hibernate to generate H2-compatible queries.
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Configures the action Hibernate performs on the database schema at startup.
# "update" automatically updates the schema to reflect entity changes without losing data.
spring.jpa.hibernate.ddl-auto=update

# H2 Console Configuration
# Enables the H2 console, which is a web-based database management tool for H2 databases.
spring.h2.console.enabled=true

# Defines the path at which the H2 console will be available. Access it via http://localhost:<port>/h2-console
spring.h2.console.path=/h2-console
